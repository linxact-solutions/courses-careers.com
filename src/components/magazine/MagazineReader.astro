---
export interface Props {
  title: string;
  subtitle?: string;
  publishDate: string;
  category?: string;
  readTime?: string;
  content: string;
  coverImage?: string;
  tableOfContents?: Array<{
    title: string;
    page: number;
    anchor: string;
  }>;
}

const { 
  title, 
  subtitle, 
  publishDate, 
  category, 
  readTime, 
  content, 
  coverImage,
  tableOfContents = []
} = Astro.props;
---

<div class="magazine-reader min-h-screen bg-gradient-to-br from-pink-50 via-white to-purple-50">
  <!-- Magazine Header -->
  <header class="bg-white shadow-sm border-b border-pink-200">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
      <div class="flex items-center justify-between">
        <div class="flex items-center space-x-4">
          <button 
            onclick="history.back()" 
            class="flex items-center space-x-2 text-pink-600 hover:text-pink-800 transition-colors"
            aria-label="Go back"
          >
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
            </svg>
            <span>Back to Archive</span>
          </button>
        </div>
        
        <div class="flex items-center space-x-4">
          <!-- Reading Progress -->
          <div class="hidden md:flex items-center space-x-2">
            <span class="text-sm text-gray-600">Reading Progress:</span>
            <div class="w-24 h-2 bg-gray-200 rounded-full">
              <div id="reading-progress" class="h-2 bg-pink-500 rounded-full transition-all duration-300" style="width: 0%"></div>
            </div>
          </div>
          
          <!-- Reading Tools -->
          <div class="flex items-center space-x-2">
            <button 
              onclick="toggleTableOfContents()" 
              class="p-2 text-gray-600 hover:text-pink-600 transition-colors"
              aria-label="Toggle table of contents"
            >
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
              </svg>
            </button>
            
            <button 
              onclick="adjustFontSize('decrease')" 
              class="p-2 text-gray-600 hover:text-pink-600 transition-colors"
              aria-label="Decrease font size"
            >
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 12H4" />
              </svg>
            </button>
            
            <button 
              onclick="adjustFontSize('increase')" 
              class="p-2 text-gray-600 hover:text-pink-600 transition-colors"
              aria-label="Increase font size"
            >
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
              </svg>
            </button>
            
            <button 
              onclick="printMagazine()" 
              class="p-2 text-gray-600 hover:text-pink-600 transition-colors"
              aria-label="Print magazine"
            >
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 17h2a2 2 0 002-2v-4a2 2 0 00-2-2H5a2 2 0 00-2 2v4a2 2 0 002 2h2m2 4h6a2 2 0 002-2v-4a2 2 0 00-2-2H9a2 2 0 00-2 2v4a2 2 0 002 2zm8-12V5a2 2 0 00-2-2H9a2 2 0 00-2 2v4h10z" />
              </svg>
            </button>
            
            <button 
              onclick="shareMagazine()" 
              class="p-2 text-gray-600 hover:text-pink-600 transition-colors"
              aria-label="Share magazine"
            >
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z" />
              </svg>
            </button>
          </div>
        </div>
      </div>
    </div>
  </header>

  <div class="flex max-w-7xl mx-auto">
    <!-- Table of Contents Sidebar -->
    <aside 
      id="table-of-contents" 
      class="w-64 bg-white shadow-sm border-r border-pink-200 hidden lg:block sticky top-20 h-screen overflow-y-auto"
    >
      <div class="p-6">
        <h3 class="text-lg font-semibold text-gray-900 mb-4">Table of Contents</h3>
        <nav>
          <ul class="space-y-2">
            {tableOfContents.map((item, index) => (
              <li>
                <a 
                  href={`#${item.anchor}`} 
                  class="block text-sm text-gray-600 hover:text-pink-600 transition-colors py-1 border-l-2 border-transparent hover:border-pink-300 pl-3"
                  onclick="scrollToSection(this)"
                >
                  {item.title}
                </a>
              </li>
            ))}
          </ul>
        </nav>
      </div>
    </aside>

    <!-- Magazine Content -->
    <main class="flex-1 bg-white">
      <!-- Magazine Cover -->
      <div class="bg-gradient-to-br from-pink-100 to-purple-100 py-12 px-4 sm:px-6 lg:px-8">
        <div class="max-w-4xl mx-auto text-center">
          {coverImage && (
            <div class="mb-8">
              <img 
                src={coverImage} 
                alt={title}
                class="w-64 h-80 mx-auto object-cover rounded-lg shadow-lg"
              />
            </div>
          )}
          
          <div class="space-y-4">
            {category && (
              <div class="inline-block bg-pink-600 text-white px-4 py-2 rounded-full text-sm font-medium">
                {category}
              </div>
            )}
            
            <h1 class="text-4xl md:text-5xl font-bold text-gray-900 leading-tight">
              {title}
            </h1>
            
            {subtitle && (
              <p class="text-xl text-gray-600 max-w-2xl mx-auto">
                {subtitle}
              </p>
            )}
            
            <div class="flex flex-wrap items-center justify-center gap-6 text-sm text-gray-500">
              <span class="flex items-center">
                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                </svg>
                {new Date(publishDate).toLocaleDateString('en-GB', { 
                  day: 'numeric', 
                  month: 'long', 
                  year: 'numeric' 
                })}
              </span>
              
              {readTime && (
                <span class="flex items-center">
                  <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
                  {readTime}
                </span>
              )}
            </div>
          </div>
        </div>
      </div>

      <!-- Magazine Content -->
      <article class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
        <div 
          id="magazine-content" 
          class="prose prose-lg max-w-none prose-pink prose-headings:text-gray-900 prose-headings:font-bold prose-p:text-gray-700 prose-p:leading-relaxed prose-a:text-pink-600 prose-a:no-underline hover:prose-a:underline"
          set:html={content}
        >
        </div>
      </article>

      <!-- Magazine Navigation -->
      <nav class="bg-gray-50 border-t border-gray-200 py-8">
        <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
          <div class="flex items-center justify-between">
            <button 
              onclick="previousPage()" 
              class="flex items-center space-x-2 text-pink-600 hover:text-pink-800 transition-colors"
            >
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
              </svg>
              <span>Previous Issue</span>
            </button>
            
            <div class="flex items-center space-x-4">
              <span class="text-sm text-gray-500">Page 1 of 1</span>
            </div>
            
            <button 
              onclick="nextPage()" 
              class="flex items-center space-x-2 text-pink-600 hover:text-pink-800 transition-colors"
            >
              <span>Next Issue</span>
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
              </svg>
            </button>
          </div>
        </div>
      </nav>
    </main>
  </div>
</div>

<script>
  // Reading progress tracking
  function updateReadingProgress() {
    const content = document.getElementById('magazine-content');
    const progressBar = document.getElementById('reading-progress');
    
    if (content && progressBar) {
      const contentTop = content.offsetTop;
      const contentHeight = content.offsetHeight;
      const windowHeight = window.innerHeight;
      const scrollTop = window.scrollY;
      
      const progress = Math.max(0, Math.min(100, 
        ((scrollTop - contentTop + windowHeight) / contentHeight) * 100
      ));
      
      progressBar.style.width = `${progress}%`;
    }
  }

  // Toggle table of contents
  function toggleTableOfContents() {
    const toc = document.getElementById('table-of-contents');
    if (toc) {
      toc.classList.toggle('hidden');
    }
  }

  // Adjust font size
  let currentFontSize = 16;
  function adjustFontSize(action) {
    const content = document.getElementById('magazine-content');
    if (content) {
      if (action === 'increase' && currentFontSize < 24) {
        currentFontSize += 2;
      } else if (action === 'decrease' && currentFontSize > 12) {
        currentFontSize -= 2;
      }
      content.style.fontSize = `${currentFontSize}px`;
      localStorage.setItem('magazineFontSize', currentFontSize);
    }
  }

  // Print magazine
  function printMagazine() {
    window.print();
  }

  // Share magazine
  function shareMagazine() {
    if (navigator.share) {
      navigator.share({
        title: document.title,
        text: 'Check out this magazine!',
        url: window.location.href
      });
    } else {
      navigator.clipboard.writeText(window.location.href).then(() => {
        alert('Link copied to clipboard!');
      });
    }
  }

  // Scroll to section
  function scrollToSection(element) {
    const targetId = element.getAttribute('href').substring(1);
    const target = document.getElementById(targetId);
    if (target) {
      target.scrollIntoView({ behavior: 'smooth' });
    }
  }

  // Navigation placeholders
  function previousPage() {
    alert('Previous issue navigation would be implemented here');
  }

  function nextPage() {
    alert('Next issue navigation would be implemented here');
  }

  // Initialize
  document.addEventListener('DOMContentLoaded', function() {
    // Load saved font size
    const savedFontSize = localStorage.getItem('magazineFontSize');
    if (savedFontSize) {
      currentFontSize = parseInt(savedFontSize);
      const content = document.getElementById('magazine-content');
      if (content) {
        content.style.fontSize = `${currentFontSize}px`;
      }
    }

    // Add scroll listener for reading progress
    window.addEventListener('scroll', updateReadingProgress);
    
    // Initial progress update
    updateReadingProgress();
  });
</script>

<style>
  .magazine-reader {
    font-family: 'Georgia', 'Times New Roman', serif;
  }

  .prose {
    font-size: 16px;
    line-height: 1.7;
  }

  .prose h1, .prose h2, .prose h3, .prose h4, .prose h5, .prose h6 {
    font-family: 'Inter', sans-serif;
    margin-top: 2rem;
    margin-bottom: 1rem;
  }

  .prose h1 {
    font-size: 2.5rem;
    line-height: 1.2;
  }

  .prose h2 {
    font-size: 2rem;
    line-height: 1.3;
  }

  .prose h3 {
    font-size: 1.5rem;
    line-height: 1.4;
  }

  .prose p {
    margin-bottom: 1.5rem;
  }

  .prose blockquote {
    border-left: 4px solid #db2777;
    background-color: #fdf2f8;
    padding: 1rem 1.5rem;
    margin: 2rem 0;
    font-style: italic;
  }

  .prose code {
    background-color: #f3f4f6;
    padding: 0.2rem 0.4rem;
    border-radius: 0.25rem;
    font-size: 0.9em;
  }

  .prose img {
    border-radius: 0.5rem;
    box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1);
    margin: 2rem 0;
  }

  .prose table {
    width: 100%;
    border-collapse: collapse;
    margin: 2rem 0;
  }

  .prose th,
  .prose td {
    border: 1px solid #e5e7eb;
    padding: 0.75rem;
    text-align: left;
  }

  .prose th {
    background-color: #f9fafb;
    font-weight: 600;
  }

  /* Print styles */
  @media print {
    .magazine-reader header,
    .magazine-reader nav,
    #table-of-contents {
      display: none !important;
    }
    
    .magazine-reader main {
      max-width: 100% !important;
      margin: 0 !important;
      padding: 0 !important;
    }
    
    .prose {
      font-size: 12pt !important;
      line-height: 1.5 !important;
    }
    
    .prose h1, .prose h2, .prose h3 {
      page-break-after: avoid;
    }
    
    .prose p {
      orphans: 3;
      widows: 3;
    }
  }

  /* Mobile responsiveness */
  @media (max-width: 768px) {
    #table-of-contents {
      display: none;
    }
    
    .prose {
      font-size: 14px;
    }
    
    .prose h1 {
      font-size: 2rem;
    }
    
    .prose h2 {
      font-size: 1.5rem;
    }
    
    .prose h3 {
      font-size: 1.25rem;
    }
  }

  /* Accessibility improvements */
  .prose a:focus {
    outline: 2px solid #db2777;
    outline-offset: 2px;
  }

  .prose img {
    max-width: 100%;
    height: auto;
  }

  /* Smooth scrolling for internal links */
  html {
    scroll-behavior: smooth;
  }
</style>